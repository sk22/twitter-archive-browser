{"version":3,"sources":["components/tweets-loader.js","components/section.js","lib/utils.js","components/form.js","components/tweets-select.js","components/tweets-filter.js","lib/browser-tweet-utils.js","components/tweets-tools.js","components/app.js","index.js"],"names":["ErrorOutput","styled","div","FileInput","input","TweetsLoader","setTweets","useState","error","setError","inputRef","createRef","handleTweets","tweet","allTweets","Object","keys","flatMap","partName","filter","item","Boolean","map","handleTweetJs","jsText","window","YTD","eval","handleFileChange","a","current","file","files","name","endsWith","reader","FileReader","readAsText","addEventListener","ev","target","result","err","toString","JSZip","loadAsync","zip","async","tweetJs","console","errorMessages","type","ref","onChange","section","css","Section","SectionDivider","hr","SectionHeader","h2","TweetSection","makeCreatedComparator","invert","t1","t2","getTime","Date","created_at","createDateString","d","date","pad","num","length","day","getDate","month","getMonth","year","getFullYear","sortBy","random","tweets","amount","min","max","randomTweets","i","tweetIndex","Math","ceil","floor","splice","push","oldest","sort","slice","newest","likes","Number","favorite_count","sortModes","fn","unixDay","FormRow","AmountRow","DateRange","TweetsSelect","tweetsPerDay","handleLoadTweets","handleQueryTweets","amountState","setAmountState","nonZeroAmountState","setNonZeroAmountState","sortMode","setSortMode","embedTweets","setEmbedTweets","showTweets","setShowTweets","sinceRef","useRef","untilRef","amountRef","setAmount","handleAmountChange","event","valueAsNumber","value","oldestTime","newestTime","sinceTime","setSinceTime","untilTime","setUntilTime","resetTime","set","time","isNaN","useEffect","amountInRange","useMemo","beginningOfDay","reduce","sum","count","step","htmlFor","id","onClick","mode","checked","queriedTweets","since","valueAsDate","until","sinceDayStart","setUTCHours","untilDayEnd","script","document","createElement","src","head","appendChild","injectScript","StyledInput","TweetsFilter","setFilterText","currentText","setCurrentText","placeholder","tweetUtils","callback","args","csrfToken","cookie","split","s","trim","startsWith","tweetUrlRegex","getStatus","res","statusText","200","404","403","401","status","utils","getBearerToken","mainScriptSrc","querySelector","fetch","text","mainScriptText","findStringsRegex","match","longest","exec","makeRequest","endpoint","body","bearerToken","bearer","credentials","headers","Accept","authorization","method","deleteTweet","t","test","deleteTweets","Promise","all","promptDeleteTweets","promptText","prompt","responses","log","alertResponses","json","jsonResponses","codes","obj","alert","code","join","TextFormRow","link","location","hostname","pathname","ScriptletBox","disabled","navigator","clipboard","writeText","Margins","TweetsTools","ids","blob","Blob","JSON","stringify","deleteScript","then","download","href","URL","createObjectURL","GlobalStyle","createGlobalStyle","Tweet","blockquote","Main","main","TweetsLoaded","p","Line","SearchBar","label","tweetTypesOptions","regular","replies","retweets","App","setAllTweets","setQueriedTweets","filterText","searchString","setSearchString","customExpression","setCustomExpression","isRegExp","setIsRegExp","caseSensitive","setCaseSensitive","includeTweets","setIncludeTweets","tweetsSorted","regExp","RegExp","hasCustomExpression","func","Function","full_text","toLowerCase","compareText","includes","isReply","isRetweet","tweetIsRetweet","forEach","createdAt","dateString","isTweetHidden","handleChangeCustomExpression","debounce","handleChangeSearchText","title","o","style","display","className","dangerouslySetInnerHTML","__html","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b6d10e02.chunk.js","sourcesContent":["import JSZip from 'jszip'\nimport React, { createRef, useState } from 'react'\nimport styled from 'styled-components'\n\nconst ErrorOutput = styled.div`\n  color: red;\n`\n\nconst FileInput = styled.input`\n  width: 100%;\n`\n\nconst TweetsLoader = ({ setTweets }) => {\n  const [error, setError] = useState(null)\n  const inputRef = createRef()\n\n  const handleTweets = ({ tweet }) => {\n    const partNames = Object.keys(tweet)\n    const allTweets = partNames\n      .flatMap((partName) => tweet[partName])\n      .filter((item) => Boolean(item.tweet))\n      .map((item) => item.tweet)\n    setTweets(allTweets)\n  }\n\n  const handleTweetJs = (jsText) => {\n    window.YTD = { tweet: {} }\n    eval(jsText) // eslint-disable-line\n    handleTweets(window.YTD)\n  }\n\n  const handleFileChange = async () => {\n    setError(null)\n    if (inputRef.current) {\n      const file = inputRef.current.files[0]\n      if (file && file.name.endsWith('.js')) {\n        const reader = new FileReader()\n        reader.readAsText(file, 'utf-8')\n        reader.addEventListener('load', (ev) => {\n          handleTweetJs(ev.target.result)\n        })\n        reader.addEventListener('error', (err) => {\n          setError(['file', err.toString()])\n        })\n      } else if (file && file.name.endsWith('.zip')) {\n        try {\n          const zip = await JSZip.loadAsync(file)\n          const files = zip.file(/data\\/tweet.js/)\n          const tweetJs = await files[0].async('string')\n          handleTweetJs(tweetJs)\n        } catch (err) {\n          setError(['zip', err.toString()])\n          console.error(err)\n        }\n      }\n    }\n  }\n\n  const errorMessages = {\n    zip: () => (\n      <p>\n        Could not read the ZIP archive or its contained <code>tweet.js</code>{' '}\n        file. The ZIP file might be too big – maybe try manually extracting the\n        tweet.js file from the archive ZIP's <code>data</code> subdirectory and\n        using it directly.\n      </p>\n    ),\n    file: () => <p>An error occured while trying to read the file.</p>\n  }\n\n  return (\n    <>\n      <FileInput type=\"file\" ref={inputRef} onChange={handleFileChange} />\n      {error && (\n        <ErrorOutput>\n          {errorMessages[error[0]]()}\n          <pre>{error[1]}</pre>\n        </ErrorOutput>\n      )}\n    </>\n  )\n}\n\nexport default TweetsLoader\n","import styled, { css } from 'styled-components'\n\nconst section = css`\n  width: 100%;\n  padding: 1.5rem;\n  background: white;\n  border-radius: 0.5rem;\n  border: var(--border);\n  margin: 10px 0;\n`\n\nconst Section = styled.section`\n  ${section}\n`\n\nexport const SectionDivider = styled.hr`\n  border: var(--border);\n  border-top: none;\n  width: calc(100% + 2 * 1.5rem);\n  margin: 1rem 0;\n  margin-left: -1.5rem;\n`\n\nexport const SectionHeader = styled.h2`\n  text-transform: uppercase;\n  font-size: 0.9rem;\n  font-weight: bold;\n  margin: 0;\n  margin-bottom: 1rem;\n`\n\nexport const TweetSection = styled.section`\n  width: 100%;\n  & > .twitter-tweet:not(.twitter-tweet-rendered) {\n    ${section}\n    margin-left: 0;\n    p {\n      margin-top: 0;\n    }\n  }\n`\n\nexport default Section\n","/**\n * Returns a random integer between min (inclusive) and max (inclusive).\n * The value is no lower than min (or the next integer greater than min\n * if min isn't an integer) and no greater than max (or the next integer\n * lower than max if max isn't an integer).\n * Using Math.round() will give you a non-uniform distribution!\n */\nfunction getRandomInt(min, max) {\n  min = Math.ceil(min)\n  max = Math.floor(max)\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\nconst makeCreatedComparator =\n  (invert = false) =>\n  (t1, t2) => {\n    const getTime = (tweet) => new Date(tweet.created_at).getTime()\n    return getTime(invert ? t2 : t1) - getTime(invert ? t1 : t2)\n  }\n\nexport const createDateString = (d) => {\n  const date = d instanceof Date ? d : new Date(d)\n  const pad = (num) =>\n    num.toString().length === 1 ? `0${num}` : num.toString()\n  const day = date.getDate()\n  const month = date.getMonth() + 1\n  const year = date.getFullYear()\n  return `${year}-${pad(month)}-${pad(day)}`\n}\n\nexport const createDayString = (createdAt) =>\n  createdAt.slice(4, 11) + createdAt.slice(-4)\n\nexport const sortBy = {\n  random: (tweets, amount) => {\n    const randomTweets = []\n    for (let i = 0; i < amount && i < tweets.length; i++) {\n      const tweetIndex = getRandomInt(0, tweets.length - 1)\n      const tweet = tweets.splice(tweetIndex, 1)[0]\n      randomTweets.push(tweet)\n    }\n    return randomTweets\n  },\n  oldest: (tweets, amount) =>\n    tweets.sort(makeCreatedComparator()).slice(0, amount),\n  newest: (tweets, amount) =>\n    tweets.sort(makeCreatedComparator(true)).slice(0, amount),\n  likes: (tweets, amount) =>\n    tweets\n      .sort((t1, t2) => Number(t2.favorite_count) - Number(t1.favorite_count))\n      .slice(0, amount)\n}\n\nexport const sortModes = {\n  newest: { name: 'Newest', fn: sortBy.newest },\n  oldest: { name: 'Oldest', fn: sortBy.oldest },\n  random: { name: 'Random', fn: sortBy.random },\n  likes: { name: 'Likes', fn: sortBy.likes }\n}\n\nexport function injectScript() {\n  const script = document.createElement('script')\n  script.src = 'https://platform.twitter.com/widgets.js'\n  document.head.appendChild(script)\n  return script\n}\n\nexport const unixDay = 1000 * 60 * 60 * 24\n","import styled from 'styled-components'\n\nexport const FormRow = styled.div`\n  display: flex;\n  align-items: center;\n  margin: 0.8rem 0;\n\n  & > * + * {\n    margin-left: 0.5rem;\n  }\n\n  &:last-child {\n    margin-bottom: 0;\n  }\n`\n","import React, { useEffect, useMemo, useRef, useState } from 'react'\nimport {\n  injectScript,\n  createDateString,\n  sortModes,\n  unixDay\n} from '../lib/utils'\nimport styled from 'styled-components'\nimport { FormRow } from './form'\nimport { SectionDivider } from './section'\n\nconst AmountRow = styled(FormRow)`\n  & > input[type='number'] {\n    width: 5rem;\n  }\n\n  & > input[type='range'] {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst DateRange = styled.input`\n  width: 100%;\n`\n\nconst TweetsSelect = ({\n  tweets,\n  tweetsPerDay,\n  handleQueryTweets: handleLoadTweets\n}) => {\n  const [amountState, setAmountState] = useState(1)\n  const [nonZeroAmountState, setNonZeroAmountState] = useState(1)\n  const [sortMode, setSortMode] = useState('newest')\n  const [embedTweets, setEmbedTweets] = useState(true)\n  const [showTweets, setShowTweets] = useState(true)\n\n  const sinceRef = useRef()\n  const untilRef = useRef()\n  const amountRef = useRef()\n\n  const setAmount = (amount) => {\n    setAmountState(amount)\n    if (amount > 0) setNonZeroAmountState(amount)\n    setEmbedTweets(amount < 30)\n    setShowTweets(amount < 100)\n  }\n\n  const handleAmountChange = (event) =>\n    setAmount(event.target.valueAsNumber || Number(event.target.value))\n\n  const oldestTime = new Date(tweets[0].created_at).getTime()\n  const newestTime = new Date(tweets[tweets.length - 1].created_at).getTime()\n\n  const [sinceTime, setSinceTime] = useState(oldestTime)\n  const [untilTime, setUntilTime] = useState(newestTime)\n\n  const resetTime = (set, time, resetTime) => isNaN(time) && set(resetTime)\n\n  useEffect(\n    () => resetTime(setSinceTime, sinceTime, oldestTime),\n    [sinceTime, oldestTime]\n  )\n\n  useEffect(\n    () => resetTime(setUntilTime, untilTime, newestTime),\n    [untilTime, newestTime]\n  )\n\n  const amountInRange = useMemo(() => {\n    const isDayInRange = (day) => {\n      const beginningOfDay = new Date(day).getTime()\n      return (\n        beginningOfDay + unixDay >= sinceTime &&\n        beginningOfDay - unixDay <= untilTime\n      )\n    }\n    return Object.keys(tweetsPerDay)\n      .filter(isDayInRange)\n      .map((day) => tweetsPerDay[day])\n      .reduce((sum, count) => sum + count, 0)\n  }, [tweetsPerDay, sinceTime, untilTime])\n\n  useEffect(() => {\n    if (amountInRange < amountState) {\n      setAmount(amountInRange)\n    }\n    if (amountState === 0 && amountInRange > 0) {\n      setAmount(nonZeroAmountState)\n    }\n  }, [amountInRange, amountState, nonZeroAmountState])\n\n  useEffect(() => {\n    if (oldestTime > sinceRef.current.valueAsNumber) setSinceTime(oldestTime)\n  }, [oldestTime])\n\n  useEffect(() => {\n    if (newestTime < untilRef.current.valueAsNumber) setUntilTime(newestTime)\n  }, [newestTime])\n\n  const handleClickQuery = () => {\n    const queriedTweets = tweets.filter((tweet) => {\n      const since = sinceRef.current.valueAsDate\n      const until = untilRef.current.valueAsDate\n      if (!since || !until) return false\n\n      const date = new Date(tweet.created_at)\n      const sinceDayStart = new Date(since.getTime())\n      sinceDayStart.setUTCHours(0, 0, 0, 0)\n      const untilDayEnd = new Date(until.getTime() + unixDay)\n      untilDayEnd.setUTCHours(0, 0, 0, 0)\n\n      if (sinceDayStart.getTime() >= date.getTime()) return false\n      if (untilDayEnd.getTime() <= date.getTime()) return false\n      return true\n    })\n\n    handleLoadTweets(\n      sortModes[sortMode].fn(queriedTweets, amountState),\n      showTweets\n    )\n    if (embedTweets) injectScript()\n  }\n\n  return (\n    <>\n      <label>\n        Since{' '}\n        <input\n          type=\"date\"\n          value={createDateString(sinceTime || oldestTime)}\n          ref={sinceRef}\n          onChange={(event) => setSinceTime(event.target.valueAsNumber)}\n        />\n      </label>\n      <DateRange\n        type=\"range\"\n        min={oldestTime}\n        max={newestTime}\n        value={sinceTime || oldestTime}\n        step={unixDay}\n        onChange={(event) => setSinceTime(Number(event.target.value))}\n      />\n      <label>\n        Until{' '}\n        <input\n          type=\"date\"\n          value={createDateString(untilTime || newestTime)}\n          ref={untilRef}\n          onChange={(event) => setUntilTime(event.target.valueAsNumber)}\n        />\n      </label>\n      <DateRange\n        type=\"range\"\n        min={oldestTime}\n        max={newestTime}\n        value={untilTime || newestTime}\n        step={unixDay}\n        onChange={(event) => {\n          setUntilTime(Number(event.target.value))\n        }}\n      />\n      <SectionDivider />\n      <AmountRow htmlFor=\"amount\">\n        <label htmlFor=\"amount\">Amount:</label>\n        <input\n          type=\"number\"\n          id=\"amount\"\n          min={amountInRange > 0 ? 1 : 0}\n          max={amountInRange}\n          step=\"1\"\n          value={amountState}\n          onChange={handleAmountChange}\n        />\n        <p>out&nbsp;of</p>\n        <button onClick={() => setAmount(amountInRange)}>\n          all {amountInRange}\n        </button>\n        <input\n          type=\"range\"\n          min={amountInRange > 0 ? 1 : 0}\n          max={Math.min(amountInRange, 99)}\n          value={amountState}\n          ref={amountRef}\n          onChange={handleAmountChange}\n        />\n      </AmountRow>\n      <SectionDivider />\n      <FormRow>\n        <span>Sort by</span>\n        {Object.keys(sortModes).map((mode, i) => (\n          <label htmlFor={`query-${mode}`} key={`${i}-${mode}`}>\n            <input\n              type=\"radio\"\n              id={`query-${mode}`}\n              name=\"query-type\"\n              onChange={() => setSortMode(mode)}\n              value={mode}\n              checked={sortMode === mode}\n            />\n            {sortModes[mode].name}\n          </label>\n        ))}\n      </FormRow>\n      <SectionDivider />\n      <FormRow>\n        <input type=\"submit\" onClick={handleClickQuery} value=\"Query\" />\n        <label htmlFor=\"show-tweets\">\n          <input\n            id=\"show-tweets\"\n            type=\"checkbox\"\n            checked={showTweets}\n            onChange={(event) => setShowTweets(Boolean(event.target.checked))}\n          />{' '}\n          Show tweets\n        </label>{' '}\n        <label htmlFor=\"embed-tweets\">\n          <input\n            id=\"embed-tweets\"\n            type=\"checkbox\"\n            checked={embedTweets}\n            onChange={(event) => setEmbedTweets(Boolean(event.target.checked))}\n          />{' '}\n          Embed tweets\n        </label>\n      </FormRow>\n    </>\n  )\n}\n\nexport default TweetsSelect\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\n\nconst StyledInput = styled.input`\n  width: 100%;\n  margin-bottom: 1rem;\n`\n\nconst TweetsFilter = ({ setFilterText }) => {\n  const [currentText, setCurrentText] = useState('')\n\n  const handleChange = (event) => {\n    setCurrentText(event.target.value)\n    setFilterText(event.target.value)\n  }\n\n  return (\n    <StyledInput\n      type=\"text\"\n      value={currentText}\n      onChange={handleChange}\n      placeholder=\"Type to filter…\"\n    />\n  )\n}\n\nexport default TweetsFilter\n","// eslint-disable-next-line no-unused-vars\nexport default function tweetUtils(callback, args) {\n  const getCookie = (name) =>\n    document.cookie\n      .split(';')\n      .map((s) => s.trim())\n      .filter((s) => s.startsWith(name))[0]\n      .slice(name.length + 1)\n  const csrfToken = getCookie('ct0')\n  const tweetUrlRegex = /https:\\/\\/twitter.com\\/.+\\/status\\/(\\d+)/\n  const getTweetId = (t) =>\n    tweetUrlRegex.test(t) ? t.match(tweetUrlRegex)[1] : t\n\n  const getStatus = (res) => {\n    if (res.statusText.length > 0) return res.statusText\n    const names = {\n      200: 'OK',\n      404: 'Not Found',\n      403: 'Forbidden',\n      401: 'Unauthorized'\n    }\n    return names[res.status] || `HTTP ${res.status}`\n  }\n\n  const utils = {\n    async getBearerToken() {\n      const mainScriptSrc = document.querySelector('script[src*=\\\\/main]').src\n      const mainScriptText = await (await fetch(mainScriptSrc)).text()\n      const findStringsRegex = /=\"([A-Za-z0-9%]+)\"/g\n      let match = null\n      let longest = ''\n      while ((match = findStringsRegex.exec(mainScriptText))) {\n        if (match[1].length > longest.length) longest = match[1]\n      }\n      return longest\n    },\n\n    async makeRequest(endpoint, body, bearerToken) {\n      const bearer = bearerToken || (await this.getBearerToken())\n\n      return await fetch(endpoint, {\n        credentials: 'include',\n        headers: {\n          Accept: '*/*',\n          'Content-Type': 'application/x-www-form-urlencoded',\n          'x-csrf-token': csrfToken,\n          authorization: `Bearer ${bearer}`\n        },\n        body,\n        method: 'POST',\n        mode: 'cors'\n      })\n    },\n\n    async deleteTweet(tweet, bearerToken) {\n      return this.makeRequest(\n        'https://twitter.com/i/api/1.1/statuses/destroy.json',\n        `tweet_mode=extended&id=${getTweetId(tweet)}`,\n        bearerToken\n      )\n    },\n\n    async deleteTweets(tweets) {\n      const bearerToken = await this.getBearerToken()\n      return Promise.all(\n        tweets.map((tweet) => this.deleteTweet(tweet, bearerToken))\n      )\n    },\n\n    async promptDeleteTweets() {\n      const promptText = prompt(\n        'delete tweet\\n(use commas to delete multiple tweets)'\n      )\n      if (promptText) {\n        const responses = await this.deleteTweets(\n          promptText.split(',').map((s) => s.trim())\n        )\n        console.log(responses)\n        await this.alertResponses(responses)\n      }\n    },\n\n    async alertResponses(responses) {\n      const jsonResponses = await Promise.all(\n        responses.map((res) => res.json())\n      )\n      console.log(jsonResponses)\n      const codes = responses.reduce((obj, res) => {\n        const status = getStatus(res)\n        return { ...obj, [status]: (obj[status] || 0) + 1 }\n      }, {})\n      alert(\n        'Done!\\n' +\n          Object.keys(codes)\n            .map((code) => `${code} × ${codes[code]}`)\n            .join('\\n')\n      )\n    }\n  }\n\n  callback(utils, args)\n  return utils\n}\n\n// tweetUtils().promptDeleteTweets()\n","import React, { useRef } from 'react'\nimport styled from 'styled-components'\nimport tweetUtils from '../lib/browser-tweet-utils'\nimport { FormRow } from './form'\nimport { SectionDivider, SectionHeader } from './section'\n\nconst TextFormRow = styled(FormRow)`\n  & > input {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst link = window.location.hostname + window.location.pathname\n\nconst min = (args) => (fn) =>\n  `!(${tweetUtils})(${fn}, ${JSON.stringify(args)}) /* via ${link} */`\n\nconst ScriptletBox = ({ value, name }) => {\n  const inputRef = useRef()\n  return (\n    <TextFormRow>\n      <div>{name}:</div>\n      <input type=\"text\" disabled={true} ref={inputRef} value={value} />\n      <button\n        onClick={() => navigator.clipboard.writeText(inputRef.current.value)}\n      >\n        Copy\n      </button>\n    </TextFormRow>\n  )\n}\n\n// const TweetJSON = styled.pre`\n//   overflow-x: scroll;\n//   background: #eee;\n//   padding: 1rem;\n//   border-radius: 0.5rem;\n// `\n\nconst Margins = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  & > * + * {\n    margin-top: 0.5rem;\n  }\n`\n\nconst TweetsTools = ({ tweets }) => {\n  const ids = tweets.map((t) => t.id)\n  // const fields = useMemo(() => {\n  //   let fs = []\n  //   tweets.forEach(tweet => {\n  //     Object.keys(tweet).forEach(f => {\n  //       if (!fs.includes(f)) fs.push(f)\n  //     })\n  //   })\n  //   return fs\n  // }, [tweets])\n  const blob = new Blob([JSON.stringify(tweets, null, 2)], {\n    type: 'application/json'\n  })\n\n  const deleteScript = min({ ids })((utils, { ids }) =>\n    utils.deleteTweets(ids).then(utils.alertResponses)\n  )\n\n  return (\n    <Margins>\n      <TextFormRow>\n        <div>Tweet IDs:</div>\n        <input type=\"text\" disabled={true} value={ids.join(',')} />\n      </TextFormRow>\n      <small>\n        Copy one of these scripts into your Twitter tab's browser console\n        (Chrome and Firefox: CTRL/CMD+Shift+I, then click on \"Console\")\n      </small>\n      <ScriptletBox name=\"Delete tweets\" value={deleteScript} />\n      <SectionDivider />\n      <SectionHeader>Download data</SectionHeader>\n      {/* {fields.map(field => <label key={field}>\n        <input type=\"checkbox\" />\n        {field}\n      </label>)} */}\n      <a download=\"tweets.json\" href={URL.createObjectURL(blob)}>\n        Download queried tweets as JSON\n      </a>\n      {/* For reference, the first resulting tweet contains this data:\n      <TweetJSON>{JSON.stringify(tweets[0], null, 2)}</TweetJSON> */}\n    </Margins>\n  )\n}\n\nexport default TweetsTools\n","import React, { useMemo, useRef, useState } from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport Section, { SectionDivider, SectionHeader, TweetSection } from './section'\nimport TweetsLoader from './tweets-loader'\nimport TweetsSelect from './tweets-select'\nimport TweetsFilter from './tweets-filter'\nimport { createDayString, sortModes } from '../lib/utils'\nimport { FormRow } from './form'\nimport { debounce } from 'lodash'\nimport TweetsTools from './tweets-tools'\n\nconst GlobalStyle = createGlobalStyle`\n  html, body, #root {\n    height: 100%;\n    margin: 0;\n    font-family: sans-serif;\n  }\n\n  * {\n    box-sizing: border-box;\n  }\n\n  :root {\n    --border: 1px solid #ccc;\n    --border-strong: 1.3px solid #666;\n  }\n`\n\nconst Tweet = styled.blockquote`\n  white-space: pre-wrap;\n  word-break: break-word;\n`\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  width: 35rem;\n  margin: 0 auto;\n  max-width: 100%;\n  align-items: center;\n  padding: 1rem;\n  padding-top: 2rem;\n\n  & > input {\n    width: 100%;\n  }\n`\n\nconst TweetsLoaded = styled.p`\n  margin-bottom: 0;\n`\n\nconst Line = styled.hr`\n  border: none;\n  border-top: var(--border-strong);\n  width: 60%;\n  margin: 1.5rem;\n`\n\nconst SearchBar = styled.label`\n  display: flex;\n  width: 100%;\n  align-items: baseline;\n  & > input {\n    margin-left: 0.5rem;\n    flex: 1;\n  }\n`\n\nconst tweetTypesOptions = {\n  regular: 'Regular tweets',\n  replies: 'Replies',\n  retweets: 'Retweets'\n}\n\nconst App = () => {\n  const [allTweets, setAllTweets] = useState([])\n  const [queriedTweets, setQueriedTweets] = useState([])\n  const [filterText, setFilterText] = useState('')\n  const [showTweets, setShowTweets] = useState(true)\n  const [searchString, setSearchString] = useState('')\n  const [customExpression, setCustomExpression] = useState('')\n  const [isRegExp, setIsRegExp] = useState(false)\n  const [caseSensitive, setCaseSensitive] = useState(false)\n  const [error, setError] = useState(null)\n  const [includeTweets, setIncludeTweets] = useState({\n    regular: true,\n    replies: true,\n    retweets: true\n  })\n\n  const tweetsSorted = useMemo(\n    () => sortModes.oldest.fn(allTweets),\n    [allTweets]\n  )\n\n  const tweetIsRetweet = (tweet) => tweet.full_text.startsWith('RT @')\n  const tweetIsReply = (tweet) => 'in_reply_to_screen_name' in tweet\n\n  const tweets = useMemo(() => {\n    try {\n      const regExp = isRegExp\n        ? new RegExp(searchString, caseSensitive ? '' : 'i')\n        : null\n      const hasCustomExpression = customExpression.trim().length > 0\n      if (isRegExp || hasCustomExpression) setError(null)\n      const func = hasCustomExpression\n        ? // eslint-disable-next-line\n          new Function('t', `return ${customExpression}`)\n        : null\n      return tweetsSorted\n        .filter((tweet) => {\n          if (isRegExp) {\n            return regExp.test(tweet.full_text)\n          } else {\n            const text = caseSensitive\n              ? tweet.full_text\n              : tweet.full_text.toLowerCase()\n            const compareText = caseSensitive\n              ? searchString\n              : searchString.toLowerCase()\n            return text.includes(compareText)\n          }\n        })\n        .filter((t) => {\n          const isReply = tweetIsReply(t)\n          const isRetweet = tweetIsRetweet(t)\n          const isRegular = !isReply && !isRetweet\n\n          return (\n            (isRegular && includeTweets.regular) ||\n            (isReply && includeTweets.replies) ||\n            (isRetweet && includeTweets.retweets)\n          )\n        })\n        .filter((t) => {\n          return hasCustomExpression ? func(t) : true\n        })\n    } catch (err) {\n      setError(err.toString())\n      return []\n    }\n  }, [\n    tweetsSorted,\n    searchString,\n    caseSensitive,\n    isRegExp,\n    includeTweets,\n    customExpression\n  ])\n\n  const tweetsPerDay = useMemo(() => {\n    const obj = {}\n    tweets.forEach((tweet) => {\n      const dateString = createDayString(tweet.created_at)\n      obj[dateString] = (obj[dateString] || 0) + 1\n    })\n    return obj\n  }, [tweets])\n\n  const isTweetHidden = (tweet) =>\n    !tweet.full_text.toLowerCase().includes(filterText.toLowerCase())\n\n  const handleChangeCustomExpression = useRef(\n    debounce((event) => setCustomExpression(event.target.value), 600)\n  ).current\n\n  const handleChangeSearchText = useRef(\n    debounce((event) => setSearchString(event.target.value), 600)\n  ).current\n\n  return (\n    <Main>\n      <GlobalStyle />\n      <Section>\n        <SectionHeader>Load Tweet archive</SectionHeader>\n        {allTweets.length === 0 && (\n          <>\n            <p>\n              Use the file picker to upload your Twitter archive ZIP file, or\n              just the contained <code>tweet.js</code> file.\n            </p>\n            <p>\n              If you don't have a Twitter archive yet, you can request and\n              download it in your{' '}\n              <a href=\"https://twitter.com/settings/download_your_data\">\n                Twitter settings\n              </a>\n              . In this case, see you in a few hours! (Or days, depending on\n              your Twitter usage)\n            </p>\n          </>\n        )}\n        <TweetsLoader setTweets={setAllTweets} />\n        {allTweets.length > 0 && (\n          <TweetsLoaded>{allTweets.length} tweets loaded</TweetsLoaded>\n        )}\n      </Section>\n      {allTweets.length > 0 && (\n        <>\n          <Section>\n            <SectionHeader>Query tweets</SectionHeader>\n            <FormRow>\n              <SearchBar>\n                Search{' '}\n                <input\n                  type=\"text\"\n                  placeholder={\n                    isRegExp\n                      ? 'Enter a regular expression, e.g. ^Hello, .+!$'\n                      : 'Enter text…'\n                  }\n                  onChange={handleChangeSearchText}\n                />\n              </SearchBar>\n            </FormRow>\n            <FormRow>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={isRegExp}\n                  onChange={(event) =>\n                    Boolean(setIsRegExp(event.target.checked))\n                  }\n                />{' '}\n                <abbr\n                  title={\n                    'Advanced. Lets you define a regular expression, ' +\n                    'allowing to search for more specific text patterns.'\n                  }\n                >\n                  Regular expression\n                </abbr>\n              </label>\n              <label>\n                <input\n                  type=\"checkbox\"\n                  checked={caseSensitive}\n                  onChange={(event) =>\n                    Boolean(setCaseSensitive(event.target.checked))\n                  }\n                />{' '}\n                <abbr\n                  title={\n                    'Case sensitive search makes the search sensitive to ' +\n                    'lower- and uppercase letters, such as \"a\" and \"A\"'\n                  }\n                >\n                  Case sensitive\n                </abbr>\n              </label>\n            </FormRow>\n            <SectionDivider />\n            <SearchBar>\n              <abbr\n                title={\n                  'Advanced. Optionally provide a JavaScript expression to ' +\n                  'filter tweets. The tweet object is provided as variable \"' +\n                  't\" and the expression can be as simple as \"true\" or \"false\".'\n                }\n              >\n                JavaScript\n              </abbr>{' '}\n              <input\n                type=\"text\"\n                placeholder={\n                  \"Optional; example: t.in_reply_to_user_id !== '12345'\"\n                }\n                onChange={handleChangeCustomExpression}\n              />\n            </SearchBar>\n            <SectionDivider />\n            <FormRow>\n              <span>Include</span>\n              {Object.keys(tweetTypesOptions).map((mode) => (\n                <label key={mode}>\n                  <input\n                    type=\"checkbox\"\n                    name=\"replies\"\n                    onChange={(event) =>\n                      setIncludeTweets((o) => ({\n                        ...o,\n                        [mode]: event.target.checked\n                      }))\n                    }\n                    checked={includeTweets[mode]}\n                  />{' '}\n                  {tweetTypesOptions[mode]}\n                </label>\n              ))}\n            </FormRow>\n            <SectionDivider />\n            {tweets.length > 0 ? (\n              <TweetsSelect\n                tweets={tweets}\n                tweetsPerDay={tweetsPerDay}\n                handleQueryTweets={(t, showTweets) => {\n                  setQueriedTweets(t)\n                  setShowTweets(showTweets)\n                }}\n              />\n            ) : (\n              <p>{error || 'No matching tweets found'}</p>\n            )}\n          </Section>\n        </>\n      )}\n      {queriedTweets.length > 0 && (\n        <>\n          {showTweets && (\n            <>\n              <Line />\n              <TweetsFilter\n                filterText={filterText}\n                setFilterText={(text) => setFilterText(text)}\n              />\n            </>\n          )}\n          {showTweets &&\n            queriedTweets.map((tweet) => (\n              <TweetSection\n                key={tweet.id}\n                style={isTweetHidden(tweet) ? { display: 'none' } : {}}\n              >\n                <Tweet className=\"twitter-tweet\">\n                  <p dangerouslySetInnerHTML={{ __html: tweet.full_text }} />\n                  <a href={`https://twitter.com/_/status/${tweet.id}`}>\n                    {tweet.created_at}\n                  </a>\n                </Tweet>\n              </TweetSection>\n            ))}\n          <Line />\n          <Section>\n            <SectionHeader>Tweet utils</SectionHeader>\n            <TweetsTools tweets={queriedTweets} />\n          </Section>\n        </>\n      )}\n    </Main>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/app'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}